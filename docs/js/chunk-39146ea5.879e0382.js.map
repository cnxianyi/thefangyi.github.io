{"version":3,"sources":["webpack:///./src/components/common/SidebarR.vue","webpack:///./src/components/common/SidebarR.vue?08d3","webpack:///./src/components/common/SidebarR.vue?454c","webpack:///./src/study/vue/vueBasis.vue","webpack:///./src/study/vue/vueBasis.vue?13ed"],"names":["class","id","top","goTop","data","height","scrollTop","methods","watchScroll","this","window","pageYOffset","document","body","documentElement","requestAnimationFrame","scrollTo","Math","floor","getElementById","className","mounted","addEventListener","destroyed","removeEventListener","render","default","time","components","navBar","sidebarR","GoSection","str","scrollIntoView","behavior","__scopeId"],"mappings":"mIAESA,MAAM,a,EAKP,eAA2D,WAAvD,eAAkD,UAA/C,eAA2C,KAAxCC,GAAG,MAAMD,MAAM,2B,mDANjC,eASM,YARF,eAEM,MAFN,EAEM,CADF,eAAa,sBAEsB,EAAAE,K,iBAAvC,eAGM,O,MAHDF,MAAM,OAAQ,QAAK,8BAAE,EAAAG,OAAA,EAAAA,MAAA,sB,CAEtB,K,wCAUO,GACXC,KADW,WAEP,MAAO,CACHC,OAAQ,EACRC,UAAW,EACXJ,KAAK,IAIbK,QAAS,CAELC,YAFK,WAGGC,KAAKH,UAAaI,OAAOC,aAAeC,SAASC,KAAKP,WAAaM,SAASE,gBAAgBR,UACxFG,KAAKH,UAAY,IACjBG,KAAKP,KAAM,EAEXO,KAAKP,KAAM,GAGvBC,MAVK,WAYDM,KAAKH,UAAaI,OAAOC,aAAeC,SAASC,KAAKP,WAAaM,SAASE,gBAAgBR,UACxFG,KAAKH,UAAY,GACjBI,OAAOK,sBAAsBN,KAAKN,OAClCa,SAAS,EAAGC,KAAKC,MAAuB,IAAjBT,KAAKH,aAE5BU,SAAS,EAAG,GAEhBJ,SAASO,eAAe,OAAOC,UAAY,kCAMnDC,QAlCW,WAmCPX,OAAOY,iBAAiB,SAAW,eAASb,KAAKD,YAAc,OAEnEe,UArCW,WAuCXb,OAAOc,oBAAoB,SAAUf,KAAKD,e,UCnD9C,EAAOiB,OAASA,EAED,U,oCCPf,W,2KCGqC,e,iBAGH,wB,GAKzBzB,MAAM,M,GACFA,MAAM,W,EACP,eAAW,UAAP,MAAE,G,+/IAZd,eAkKM,YAjKF,eAOU,QANW0B,QAAO,GAAC,iBAEzB,C,MACiBC,KAAI,GAAC,iBAEtB,C,YAGR,eAsJM,MAtJN,EAsJM,CArJF,eAoJM,MApJN,EAoJM,CAnJF,EACA,eAAqB,GACrB,W,wBA0JG,GACXvB,KADW,WAEP,MAAO,IAIXwB,WAAY,CACRC,SAAA,KACAC,SAAA,QAEJvB,QAAS,CACLwB,UADK,SACKC,GACNpB,SAASO,eAAT,UAA2Ba,IAAOC,eAAe,CAACC,SAAU,cClLxE,EAAOT,OAASA,EAChB,EAAOU,UAAY,kBAEJ","file":"js/chunk-39146ea5.879e0382.js","sourcesContent":["<template>\r\n<div>\r\n    <div class=\"right_nav\">\r\n        <slot></slot>\r\n    </div>\r\n    <div class=\"icon\" @click=\"goTop\" v-if=\"top\">\r\n        <!-- <i class='bx bx-arrow-to-top bx-fade-up' ></i>-->\r\n        <h1><a><i id=\"top\" class='bx bx-arrow-to-top'></i></a></h1>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {mounted} from 'vue'\r\nimport { Throttle } from 'assets/js/utils.js' // 节流函数\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            height: 0,\r\n            scrollTop: 0,\r\n            top: false,\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        \r\n        watchScroll(){\r\n                this.scrollTop = (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop)       \r\n                if (this.scrollTop > 500) {\r\n                    this.top = true\r\n                }else{\r\n                    this.top = false\r\n                }\r\n        },\r\n        goTop(){\r\n//  https://zhuanlan.zhihu.com/p/97342844 白嫖\r\n            this.scrollTop = (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop)\r\n            if (this.scrollTop > 1) {\r\n                window.requestAnimationFrame(this.goTop);\r\n                scrollTo(0, Math.floor(this.scrollTop * 0.85));\r\n            } else {\r\n                scrollTo(0, 0);\r\n            }\r\n            document.getElementById('top').className = 'bx bx-arrow-to-top bx-fade-up' // 向上的动画\r\n        },  \r\n        \r\n        \r\n        \r\n        },\r\n    mounted() {\r\n        window.addEventListener('scroll' , Throttle(this.watchScroll , 500)) // 节流函数\r\n    },\r\n    destroyed () {\r\n    // 离开该页面需要移除这个监听的事件，不然会报错\r\n    window.removeEventListener('scroll', this.watchScroll)\r\n  }\r\n}\r\n</script>\r\n    \r\n<style lang=\"scss\">\r\n\r\n    @media screen and (min-width: 992px){\r\n        .right_nav {\r\n        position: fixed;\r\n        right: -30px;\r\n        top: 200px;\r\n        width: 160px;\r\n        height: auto;\r\n        \r\n    }\r\n    }\r\n    @media screen and (max-width: 991px){\r\n        .right_nav {\r\n        display: none;\r\n    }\r\n    }\r\n\r\n    \r\n\r\n    // .right_nav {\r\n        \r\n    // }\r\n    \r\n    .icon {\r\n        i {\r\n        font-size: 40px;\r\n        position: fixed;\r\n        right: 5%;\r\n        bottom: 10%;\r\n    }\r\n    }\r\n    \r\n        \r\n    \r\n</style>","import { render } from \"./SidebarR.vue?vue&type=template&id=fd5a583e\"\nimport script from \"./SidebarR.vue?vue&type=script&lang=js\"\nexport * from \"./SidebarR.vue?vue&type=script&lang=js\"\n\nimport \"./SidebarR.vue?vue&type=style&index=0&id=fd5a583e&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SidebarR.vue?vue&type=style&index=0&id=fd5a583e&lang=scss\"","<template>\r\n    <div>\r\n        <nav-bar>\r\n            <template v-slot:default>\r\n                Vue Basis\r\n            </template>\r\n            <template v-slot:time>\r\n                2021年8月14日14:31:04\r\n            </template>\r\n        </nav-bar>\r\n\r\n    <div class=\"xy\">\r\n        <div class=\"content\">\r\n            <h2>指令</h2>\r\n            <sidebarR></sidebarR>\r\n            <ol>\r\n                <li>v-text : v-text=\"msg\" == { {msg} }</li>\r\n                <li>v-html : 将value转化为 HTML 插入</li>\r\n                <li>v-show : 切换 CSS·display</li>\r\n                <li>v-if : 根据 value 的真假值来切换</li>\r\n                <li>v-else : 为 v-if / else-if 添加 else 模块</li>\r\n                <li>v-else-if : v-if 的 else if 模块(可链式调用)</li>\r\n                <li>v-for : 遍历value</li>\r\n                <li>v-on[@] : 绑定事件监听器\r\n                    <ul> 修饰符\r\n                        <li>.stop : 调用 event.stopPropagation()</li>\r\n                        <li>.prevent : 调用 event.preventDefault()</li>\r\n                        <li>.capture : 添加事件侦听器时使用capture 模式</li>\r\n                        <li>.self : 只当事件是从侦听器绑定的元素本身触发时才触发回调</li>\r\n                        <li>.{keyAlias} : 仅当事件是从特定键触发时才触发回调</li>\r\n                        <li>.once ：只触发一次回调</li>\r\n                        <li>.left : 只当点击鼠标左键时触发</li>\r\n                        <li>.right : 只当点击鼠标右键时触发</li>\r\n                        <li>.middle : 只当点击鼠标中键时触发</li>\r\n                        <li>.passive : { passive : true } 模式添加侦听器</li>\r\n                    </ul>\r\n                </li>\r\n                <li>v-bind[:] : 动态绑定</li>\r\n                <li>v-model : 双向绑定</li>\r\n                <li>v-slot[#] : 插槽</li>\r\n                <li>v-pre : 显示原始标签</li>\r\n                <li>v-cloak : 隐藏未编译的标签 直到组件准备完毕</li>\r\n                <li>v-once : 只渲染组件一次</li>\r\n                <li>v-is : 修改HTML解析规则的限制,使某些标签能够在原本不能渲染的标签内渲染</li>\r\n            </ol>\r\n            <hr>\r\n            <h2>Vue 关键词</h2>\r\n            <h4>props</h4>\r\n            <p>可以是数组或对象，接收来自<span>父组件</span>的数据</p>\r\n            <ul> 基于<span>对象</span>的情况\r\n                <li>type(String Number ...) : 用于检查传入值是否匹配</li>\r\n                <li>default(any) : 指定一个默认值，当定义但未传入该值，使用默认值</li>\r\n                <li>required(Boolean) : 设定该值是否必须传入</li>\r\n                <li>validator(function) : 自定义验证函数，验证失败则返回 false ,控制台警告</li>\r\n            </ul>\r\n\r\n            <hr>\r\n            <h4>computed 计算属性</h4>\r\n            <p>计算属性的结果会被缓存</p>\r\n            <hr>\r\n            <h4>methods 方法</h4>\r\n            <hr>\r\n            <h4>watch 侦听</h4>\r\n            <p>侦听组件实例上的响应式 Property 或函数计算结果的变化</p>\r\n            <hr>\r\n            <h4>emits</h4>\r\n            \r\n            <hr>\r\n\r\n            <h2>组件之间的通信</h2>\r\n            <h4>数据 父传子 @</h4>\r\n            <pre>in parent\r\n    &#60;son&#62; :str='s' :a='a'>&#60;/son&#62;\r\n    data() {\r\n        return {\r\n            s : 'str'\r\n            a : ['a' , 'r']\r\n        }\r\n    }\r\n\r\n\r\nin son \r\n    props: {\r\n        str: {\r\n            type: String, // 类型\r\n            required: true, // 是否必须传入\r\n            default: 'string', // 默认值\r\n            validator: (value)=> {\r\n                return ['s' , 'str'].indexOf(value) !== -1\r\n            } // 传入的值必须匹配 数组内的值\r\n        },\r\n        a: {\r\n            type: Array;\r\n        }\r\n    }</pre>\r\n    <hr>\r\n    <h4>数据 子传父 $emit</h4>\r\n    <pre>in son \r\n    data() {\r\n        return {\r\n            num : 10\r\n        }\r\n    },\r\n    methods: {\r\n        outPar(){\r\n            this.$emit('par' , this.num)\r\n        }\r\n    },\r\n    &#60;button @click='outPar'&#62;&#60;button&#62;\r\n\r\n\r\nin par\r\n    &#60;son @par='getson'&#62;&#60;son&#62;\r\n    methods: {\r\n        getson(value){\r\n            console.log(value);\r\n        }\r\n    },</pre>\r\n    <hr>\r\n    <h4>调用父组件 $parent</h4>\r\n    <pre>fun(){\r\n    this.$parent.value, // 访问父组件的值\r\n    this.$parent.method(), // 方法\r\n    this.$parent.$parent..., // 父组件的父组件的...\r\n    this.$root. ... // 根组件\r\n}</pre>\r\n    <hr>\r\n    <h4>调用子组件 $children</h4>\r\n    <pre>in par \r\n    &#60;son ref='name'&#62;&#60;/son&#62;\r\n    fun(){\r\n        this.refs.name . ... // 子组件\r\n    }</pre>\r\n    <hr>\r\n\r\n    <h2>插槽</h2>\r\n        <h4>默认插槽</h4>\r\n        <pre>&#60;component&#62;\r\n    插槽内容\r\n&#60;/component&#62;\r\n\r\nin component\r\n    &#60;.&#62;\r\n        &#60;slot&#62;&#60;/slot&#62;\r\n        // &#60;slot&#62; 设置默认值 &#60;/slot&#62;\r\n    &#60;/.&#62;\r\n\r\n== &#60;button&#62;插槽内容&#60;/button&#60;&#62;/code&#60;&#62;/pre&#62;\r\n</pre>\r\n    <hr>\r\n    <h4>具名插槽</h4>\r\n    <pre>&#60;slot name='str'&#62;&#60;/slot&#62;\r\n\r\nin component \r\n&#60;template v-slot:header&#62;\r\n    any\r\n&#60;/template&#62;\r\n        </pre>\r\n        <p>不具名的情况下自动为 default</p>\r\n        <hr>\r\n        </div>\r\n    </div>\r\n     \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport navBar from 'common/navBar.vue'\r\nimport sidebarR from 'common/SidebarR.vue'\r\nexport default {\r\n    data() {\r\n        return {\r\n            \r\n        }\r\n    },\r\n    components: {\r\n        navBar,\r\n        sidebarR\r\n    },\r\n    methods: {\r\n        GoSection(str){\r\n            document.getElementById(`${str}`).scrollIntoView({behavior: 'smooth'});\r\n        },\r\n        \r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    \r\n</style>","import { render } from \"./vueBasis.vue?vue&type=template&id=7f53d254&scoped=true\"\nimport script from \"./vueBasis.vue?vue&type=script&lang=js\"\nexport * from \"./vueBasis.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-7f53d254\"\n\nexport default script"],"sourceRoot":""}