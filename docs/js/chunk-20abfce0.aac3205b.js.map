{"version":3,"sources":["webpack:///./src/components/common/SidebarR.vue","webpack:///./src/components/common/SidebarR.vue?08d3","webpack:///./src/study/js/promise.vue","webpack:///./src/study/js/promise.vue?dc76","webpack:///./src/components/common/SidebarR.vue?2b59"],"names":["class","id","top","goTop","data","height","scrollTop","methods","watchScroll","this","window","pageYOffset","document","body","documentElement","requestAnimationFrame","scrollTo","Math","floor","getElementById","className","mounted","addEventListener","destroyed","removeEventListener","render","default","time","components","navBar","sidebarR"],"mappings":"mIAESA,MAAM,a,EAKP,eAA2D,WAAvD,eAAkD,UAA/C,eAA2C,KAAxCC,GAAG,MAAMD,MAAM,2B,mDANjC,eASM,YARF,eAEM,MAFN,EAEM,CADF,eAAa,sBAEsB,EAAAE,K,iBAAvC,eAGM,O,MAHDF,MAAM,OAAQ,QAAK,8BAAE,EAAAG,OAAA,EAAAA,MAAA,sB,CAEtB,K,wCAUO,GACXC,KADW,WAEP,MAAO,CACHC,OAAQ,EACRC,UAAW,EACXJ,KAAK,IAIbK,QAAS,CAELC,YAFK,WAGGC,KAAKH,UAAaI,OAAOC,aAAeC,SAASC,KAAKP,WAAaM,SAASE,gBAAgBR,UACxFG,KAAKH,UAAY,IACjBG,KAAKP,KAAM,EAEXO,KAAKP,KAAM,GAGvBC,MAVK,WAYDM,KAAKH,UAAaI,OAAOC,aAAeC,SAASC,KAAKP,WAAaM,SAASE,gBAAgBR,UACxFG,KAAKH,UAAY,GACjBI,OAAOK,sBAAsBN,KAAKN,OAClCa,SAAS,EAAGC,KAAKC,MAAuB,IAAjBT,KAAKH,aAE5BU,SAAS,EAAG,GAEhBJ,SAASO,eAAe,OAAOC,UAAY,kCAMnDC,QAlCW,WAmCPX,OAAOY,iBAAiB,SAAW,eAASb,KAAKD,YAAc,OAEnEe,UArCW,WAuCXb,OAAOc,oBAAoB,SAAUf,KAAKD,e,UCnD9C,EAAOiB,OAASA,EAED,U,qGCJsB,a,iBAGH,wB,GAKzBzB,MAAM,M,GACFA,MAAM,W,EACP,eAAgB,UAAZ,WAAO,G,muEAZnB,eAiGM,YAhGF,eAOU,QANW0B,QAAO,gBAAC,iBAEzB,C,MACiBC,KAAI,gBAAC,iBAEtB,C,YAGR,eAqFM,MArFN,EAqFM,CApFF,eAmFM,MAnFN,EAmFM,CAlFF,EACA,eAAqB,GACrB,Q,4BA2FG,G,UAAA,CACXC,WAAY,CACRC,SAAA,KACAC,SAAA,UC1GR,EAAOL,OAASA,EAED,gB,kCCLf","file":"js/chunk-20abfce0.aac3205b.js","sourcesContent":["<template>\r\n<div>\r\n    <div class=\"right_nav\">\r\n        <slot></slot>\r\n    </div>\r\n    <div class=\"icon\" @click=\"goTop\" v-if=\"top\">\r\n        <!-- <i class='bx bx-arrow-to-top bx-fade-up' ></i>-->\r\n        <h1><a><i id=\"top\" class='bx bx-arrow-to-top'></i></a></h1>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {mounted} from 'vue'\r\nimport { Throttle } from 'assets/js/utils.js' // 节流函数\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            height: 0,\r\n            scrollTop: 0,\r\n            top: false,\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        \r\n        watchScroll(){\r\n                this.scrollTop = (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop)       \r\n                if (this.scrollTop > 500) {\r\n                    this.top = true\r\n                }else{\r\n                    this.top = false\r\n                }\r\n        },\r\n        goTop(){\r\n//  https://zhuanlan.zhihu.com/p/97342844 白嫖\r\n            this.scrollTop = (window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop)\r\n            if (this.scrollTop > 1) {\r\n                window.requestAnimationFrame(this.goTop);\r\n                scrollTo(0, Math.floor(this.scrollTop * 0.85));\r\n            } else {\r\n                scrollTo(0, 0);\r\n            }\r\n            document.getElementById('top').className = 'bx bx-arrow-to-top bx-fade-up' // 向上的动画\r\n        },  \r\n        \r\n        \r\n        \r\n        },\r\n    mounted() {\r\n        window.addEventListener('scroll' , Throttle(this.watchScroll , 500)) // 节流函数\r\n    },\r\n    destroyed () {\r\n    // 离开该页面需要移除这个监听的事件，不然会报错\r\n    window.removeEventListener('scroll', this.watchScroll)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n    @media screen and (min-width: 992px){\r\n        .right_nav {\r\n        position: fixed;\r\n        right: -30px;\r\n        top: 200px;\r\n        width: 160px;\r\n        height: auto;\r\n        \r\n    }\r\n    }\r\n    @media screen and (max-width: 991px){\r\n        .right_nav {\r\n        display: none;\r\n    }\r\n    }\r\n\r\n    \r\n\r\n    // .right_nav {\r\n        \r\n    // }\r\n    \r\n    .icon {\r\n        i {\r\n        font-size: 40px;\r\n        position: fixed;\r\n        right: 5%;\r\n        bottom: 10%;\r\n    }\r\n    }\r\n    \r\n        \r\n    \r\n</style>","import { render } from \"./SidebarR.vue?vue&type=template&id=3a5e29e1\"\nimport script from \"./SidebarR.vue?vue&type=script&lang=js\"\nexport * from \"./SidebarR.vue?vue&type=script&lang=js\"\n\nimport \"./SidebarR.vue?vue&type=style&index=0&id=3a5e29e1&lang=scss\"\nscript.render = render\n\nexport default script","<template>\r\n    <div>\r\n        <nav-bar>\r\n            <template v-slot:default>\r\n                Promise \r\n            </template>\r\n            <template v-slot:time>\r\n                2021年8月11日15:43:57\r\n            </template>\r\n        </nav-bar>\r\n\r\n    <div class=\"xy\">\r\n        <div class=\"content\">\r\n            <h2>Promise</h2>\r\n            <sidebarR></sidebarR>\r\n            <h4>宏任务</h4>\r\n            <ol> 包括\r\n                <li>script</li>\r\n                <li>setTimeout</li>\r\n                <li>setInterval</li>\r\n                <li>setImmediate</li>\r\n                <li>I/O</li>\r\n                <li>UI rendering</li>\r\n                <span>！ 任务开始 script 为第一轮 宏任务 ， set... 将在下一轮执行</span>\r\n            </ol>\r\n            <hr>\r\n            <h4>微任务</h4>\r\n            <ul> 包括\r\n                <li>MutationObserver</li>\r\n                <li>promise.then() / catch()</li>\r\n                <li>promise开发的其他技术</li>\r\n                <li>V8垃圾回收过程</li>\r\n                <li>Node - process.nextTick</li>\r\n            </ul>\r\n            <hr>\r\n\r\n            <h4>event Loop 执行顺序</h4>\r\n            <ul>\r\n                <li>一开始js脚本作为一个宏任务执行</li>\r\n                <li>执行过程为 先执行宏任务，再检查微任务列表是否有任务</li>\r\n                <li><small>执行浏览器UI线程的渲染工作</small></li>\r\n                <li><small>检查是否有Web Worker任务，有则执行</small></li>\r\n                <li>检查是否有下一个宏任务，往复</li>\r\n            </ul>\r\n            <hr>\r\n            <h4>promise 状态(state)</h4>\r\n            <ul>\r\n                <li>pending 初始状态下<br>promise{<span class=\"code\">&#60;pending&#62;</span>}</li>\r\n                <li>fulfilled 成功<br><pre class=\"language-js\">resolve('value')</pre>promise{<span class=\"code\">&#60;fulfilled&#62;</span> : \"value\"}</li>\r\n                <li>rejected 失败<br><pre class=\"language-js\">reject(new Error(\"Err\"))</pre>Promise {<span class=\"code\">&#60;rejected&#62;</span>: Error: Err}</li>\r\n            </ul>\r\n            <hr>\r\n            <h4>Promise 对象构造器语法</h4>\r\n            <pre><code class=\"language-js\">const PT = new Promise((resolve , reject) => {\r\n        // executor 生产者代码\r\n     }) </code></pre>\r\n            <ul>\r\n                <li>传递给 new Promise 的函数为 executor , 将作为第一批宏任务执行</li>\r\n                <li>resolve , reject(可以立即执行 与 异步) 是JS自身提供的回调 , executor成功运行resolve ...</li>\r\n                <li>resolve ：成功情况下的值</li>\r\n                <li>reject : 出现错误返回 error对象</li>\r\n            </ul>\r\n            <hr>\r\n            <h3>then catch finally</h3>\r\n            <p>promise 对象是 executor 与 消费函数之间的链接</p>\r\n            <hr>\r\n            <h4>.then</h4>\r\n            <pre><code class=\"language-js\">PT.then((result) => {\r\n         \r\n     }, (error) => {\r\n        \r\n     })</code></pre>\r\n            <ul> 传入两个 函数 参数\r\n                <li>result : 在 Promise resolved 后运行并接收结果</li>\r\n                <li>error : 在 Promise rejected 后运行并接收 error</li>\r\n                <li>如果只对成功情况感兴趣 ：<span class=\"code\">PT.then( ( resolve )=> { alert ( resolve )})</span></li>\r\n                <li>同上效果 PT.then(alert)</li>\r\n            </ul>\r\n            <hr>\r\n            <h4>.catch</h4>\r\n            <p>.catch 是.then(null , fun) 的完全模拟,是一个简写形式</p>\r\n            <ul>\r\n                <li>只对 error 感兴趣</li>\r\n                <li>.then(null , errorHandlingFunction)</li>\r\n                <li>.catch(errorHandlingFunction)</li>\r\n                <li>效果一致</li>\r\n            </ul>\r\n            <hr>\r\n            <h4>.finally</h4>\r\n            <ul>\r\n                <li>.finally() 没有参数 总是运行 将处理结果传递给下一个程序</li>\r\n                <li>是执行清理 很好的程序</li>\r\n                <li><span class=\"code\">PT.finally( ()=> { alert('any') })</span></li>\r\n            </ul>\r\n            \r\n        </div>\r\n    </div>\r\n    \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport navBar from '../../components/common/navBar.vue'\r\nimport sidebarR from 'common/SidebarR.vue'\r\nimport Prism from 'prismjs';\r\nexport default {\r\n    components: {\r\n        navBar,\r\n        sidebarR\r\n    }\r\n}\r\n</script>\r\n","import { render } from \"./promise.vue?vue&type=template&id=c554d7d6\"\nimport script from \"./promise.vue?vue&type=script&lang=js\"\nexport * from \"./promise.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./SidebarR.vue?vue&type=style&index=0&id=3a5e29e1&lang=scss\""],"sourceRoot":""}