(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b6af4"],{"1de0":function(t,a,e){"use strict";e.r(a);var n=e("7a23"),d=Object(n["K"])("data-v-24f310b8");Object(n["t"])("data-v-24f310b8");var r=Object(n["g"])(" VueX Basis "),s=Object(n["g"])(" 2021年8月16日10:43:52 "),l={class:"xy"},b={class:"content"},i=Object(n["h"])("h2",null,"VueX",-1),v=Object(n["f"])('<p data-v-24f310b8>状态管理模式 + 库 ， 采用集中式存储管理应用的所有组件的状态</p><p data-v-24f310b8>一般用于开发大型单页应用，能够更好的在组件外部管理状态</p><img src="https://vuex.vuejs.org/vuex.png" alt="" style="width:100%;" data-v-24f310b8><small data-v-24f310b8>当需要对State 进行修改时。推荐在组件内进行，当需要向后台异步请求数据源修改数据时，通过 Dispatch 使用 Actions ， 否则直接使用 commit 在 Mutations 中修改数据。而不是直接修改 State 中的数据</small><hr data-v-24f310b8><h2 data-v-24f310b8>核心概念</h2><h4 data-v-24f310b8>State</h4><ul data-v-24f310b8><li data-v-24f310b8>vuex使用单一状态树</li><li data-v-24f310b8>相当于一个全局的 data</li><li data-v-24f310b8>通过 <span data-v-24f310b8>$store.state.any</span> 访问</li></ul><hr data-v-24f310b8><h4 data-v-24f310b8>Getter</h4><ul data-v-24f310b8><li data-v-24f310b8>相当于 store 的计算属性</li><li data-v-24f310b8>in store <span data-v-24f310b8> anyFun(state[, getters)=&gt; [(id)=&gt;] { return any}</span></li><li data-v-24f310b8>in vue<span data-v-24f310b8> { {$store.getters.anyFun} } / fun(){return $store.getters.anyFun}</span></li><pre data-v-24f310b8>thr: (state , getters) =&gt; (id:number) =&gt; {\r\n      return getters.test * state.ten * id \r\n    },</pre></ul><hr data-v-24f310b8><h4 data-v-24f310b8>Mutations</h4><ul data-v-24f310b8><li data-v-24f310b8>更改 store 的状态的唯一方法</li><li data-v-24f310b8>必须同步执行</li><li data-v-24f310b8>要唤醒一个 Mutation 处理函数。需要调用 store.commit 方法</li><li data-v-24f310b8><span data-v-24f310b8>store.commit(&#39;fun&#39;)</span></li><li data-v-24f310b8>支持 提交载荷(payload) 与 对象风格的提交方式</li><pre data-v-24f310b8><small data-v-24f310b8>in store</small>\r\ntest(state [, payload]){\r\n      state.count++ [ +=payload.any]\r\n    }\r\n<small data-v-24f310b8>in Vue</small>\r\nstore.commit(&#39;test&#39;, {\r\n  amount: 10\r\n})\r\n    <small data-v-24f310b8>or</small>\r\nstore.commit({\r\n  type: &#39;test&#39;,\r\n  amount: 10\r\n})\r\n</pre></ul><hr data-v-24f310b8><h4 data-v-24f310b8><a href="https://next.vuex.vuejs.org/zh/guide/actions.html" data-v-24f310b8>Actions</a></h4><ul data-v-24f310b8><li data-v-24f310b8>提交Mutation</li><li data-v-24f310b8>支持异步</li></ul><hr data-v-24f310b8><h4 data-v-24f310b8><a href="https://next.vuex.vuejs.org/zh/guide/modules.html" data-v-24f310b8>Modules</a></h4><ul data-v-24f310b8><li data-v-24f310b8>将 store 分割成各个模块</li></ul><hr data-v-24f310b8>',21);Object(n["r"])();var f=d((function(t,a,e,f,o,u){var c=Object(n["z"])("nav-bar"),h=Object(n["z"])("sidebarR");return Object(n["q"])(),Object(n["d"])("div",null,[Object(n["h"])(c,null,{default:d((function(){return[r]})),time:d((function(){return[s]})),_:1}),Object(n["h"])("div",l,[Object(n["h"])("div",b,[i,Object(n["h"])(h),v])])])})),o=e("d968"),u=e("1906"),c=(e("0613"),{data:function(){return{}},components:{navBar:o["a"],sidebarR:u["a"]},methods:{GoSection:function(t){document.getElementById("".concat(t)).scrollIntoView({behavior:"smooth"})}},computed:{}}),h=e("6b0d"),p=e.n(h);const m=p()(c,[["render",f],["__scopeId","data-v-24f310b8"]]);a["default"]=m}}]);
//# sourceMappingURL=chunk-2d0b6af4.98bab09a.js.map