{"version":3,"sources":["webpack:///./src/study/vue/vuex/basis.vue","webpack:///./src/study/vue/vuex/basis.vue?3b82"],"names":["class","default","time","data","components","navBar","sidebarR","methods","GoSection","str","document","getElementById","scrollIntoView","behavior","computed","__exports__","render"],"mappings":"oOAGqC,gB,iBAGH,wB,GAKzBA,MAAM,M,GACFA,MAAM,W,EACP,eAAa,UAAT,QAAI,G,i1EAZhB,eA+EM,YA9EF,eAOU,QANWC,QAAO,GAAC,iBAEzB,C,MACiBC,KAAI,GAAC,iBAEtB,C,YAGR,eAmEM,MAnEN,EAmEM,CAlEF,eAiEM,MAjEN,EAiEM,CAhEF,EACA,eAAqB,GACrB,W,wBAwEG,G,UAAA,CACXC,KADW,WAEP,MAAO,IAIXC,WAAY,CACRC,SAAA,KACAC,SAAA,QAEJC,QAAS,CACLC,UADK,SACKC,GACNC,SAASC,eAAT,UAA2BF,IAAOG,eAAe,CAACC,SAAU,aAIpEC,SAAU,K,qBClGd,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E","file":"js/chunk-2d0b6af4.98bab09a.js","sourcesContent":["<template>\r\n    <div>\r\n        <nav-bar>\r\n            <template v-slot:default>\r\n                VueX Basis\r\n            </template>\r\n            <template v-slot:time>\r\n                2021年8月16日10:43:52\r\n            </template>\r\n        </nav-bar>\r\n\r\n    <div class=\"xy\">\r\n        <div class=\"content\">\r\n            <h2>VueX</h2>\r\n            <sidebarR></sidebarR>\r\n            <p>状态管理模式 + 库 ， 采用集中式存储管理应用的所有组件的状态</p>\r\n            <p>一般用于开发大型单页应用，能够更好的在组件外部管理状态</p>\r\n            <img src=\"https://vuex.vuejs.org/vuex.png\" alt=\"\" style=\"width: 100%\">\r\n            <small>当需要对State 进行修改时。推荐在组件内进行，当需要向后台异步请求数据源修改数据时，通过 Dispatch 使用 Actions ， 否则直接使用 commit 在 Mutations 中修改数据。而不是直接修改 State 中的数据</small>\r\n            <hr>\r\n            <h2>核心概念</h2>\r\n            <h4>State</h4>\r\n            <ul>\r\n                <li>vuex使用单一状态树</li>\r\n                <li>相当于一个全局的 data</li>\r\n                <li>通过 <span>$store.state.any</span> 访问</li>\r\n            </ul>\r\n            <hr>\r\n\r\n            <h4>Getter</h4>\r\n            <ul>\r\n                <li>相当于 store 的计算属性</li>\r\n                <li>in store <span> anyFun(state[, getters)=> [(id)=>] { return any}</span></li>\r\n                <li>in vue<span> { {$store.getters.anyFun} } / fun(){return $store.getters.anyFun}</span></li>\r\n                <pre>thr: (state , getters) => (id:number) => {\r\n      return getters.test * state.ten * id \r\n    },</pre>\r\n            </ul>\r\n            <hr>\r\n\r\n            <h4>Mutations</h4>\r\n            <ul>\r\n                <li>更改 store 的状态的唯一方法</li>\r\n                <li>必须同步执行</li>\r\n                <li>要唤醒一个 Mutation 处理函数。需要调用 store.commit 方法</li>\r\n                <li><span>store.commit('fun')</span></li>\r\n                <li>支持 提交载荷(payload) 与 对象风格的提交方式</li>\r\n                <pre><small>in store</small>\r\ntest(state [, payload]){\r\n      state.count++ [ +=payload.any]\r\n    }\r\n<small>in Vue</small>\r\nstore.commit('test', {\r\n  amount: 10\r\n})\r\n    <small>or</small>\r\nstore.commit({\r\n  type: 'test',\r\n  amount: 10\r\n})\r\n</pre>\r\n                \r\n            </ul>\r\n            <hr>\r\n\r\n            <h4><a href=\"https://next.vuex.vuejs.org/zh/guide/actions.html\">Actions</a></h4>\r\n            <ul>\r\n                <li>提交Mutation</li>\r\n                <li>支持异步</li>\r\n            </ul>\r\n            <hr>\r\n\r\n            <h4><a href=\"https://next.vuex.vuejs.org/zh/guide/modules.html\">Modules</a> </h4>\r\n            <ul>\r\n                <li>将 store 分割成各个模块</li>\r\n            </ul>\r\n            <hr>\r\n        </div>\r\n    </div>\r\n     \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport navBar from 'common/navBar.vue'\r\nimport sidebarR from 'common/SidebarR.vue'\r\nimport store from '@/store';\r\nexport default {\r\n    data() {\r\n        return {\r\n            \r\n        }\r\n    },\r\n    components: {\r\n        navBar,\r\n        sidebarR\r\n    },\r\n    methods: {\r\n        GoSection(str){\r\n            document.getElementById(`${str}`).scrollIntoView({behavior: 'smooth'});\r\n        },\r\n        \r\n    },\r\n    computed: {\r\n\r\n    }\r\n\r\n    \r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    \r\n</style>","import { render } from \"./basis.vue?vue&type=template&id=24f310b8&scoped=true\"\nimport script from \"./basis.vue?vue&type=script&lang=js\"\nexport * from \"./basis.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\thefa\\\\Documents\\\\GitHub\\\\thefangyi.github.io\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-24f310b8\"]])\n\nexport default __exports__"],"sourceRoot":""}