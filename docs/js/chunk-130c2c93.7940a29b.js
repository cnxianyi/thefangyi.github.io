(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-130c2c93"],{1906:function(t,e,n){"use strict";var r=n("7a23"),i={class:"right_nav"},l=Object(r["h"])("h1",null,[Object(r["h"])("a",null,[Object(r["h"])("i",{id:"top",class:"bx bx-arrow-to-top"})])],-1);function o(t,e,n,o,s,a){return Object(r["q"])(),Object(r["d"])("div",null,[Object(r["h"])("div",i,[Object(r["x"])(t.$slots,"default")]),s.top?(Object(r["q"])(),Object(r["d"])("div",{key:0,class:"icon",onClick:e[1]||(e[1]=function(){return a.goTop&&a.goTop.apply(a,arguments)})},[l])):Object(r["e"])("",!0)])}var s=n("2f14"),a={data:function(){return{height:0,scrollTop:0,top:!1}},methods:{watchScroll:function(){this.scrollTop=window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop,this.scrollTop>500?this.top=!0:this.top=!1},goTop:function(){this.scrollTop=window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop,this.scrollTop>1?(window.requestAnimationFrame(this.goTop),scrollTo(0,Math.floor(.85*this.scrollTop))):scrollTo(0,0),document.getElementById("top").className="bx bx-arrow-to-top bx-fade-up"}},mounted:function(){window.addEventListener("scroll",Object(s["a"])(this.watchScroll,500))},destroyed:function(){window.removeEventListener("scroll",this.watchScroll)}};n("416d");a.render=o;e["a"]=a},"416d":function(t,e,n){"use strict";n("d175")},"4a42":function(t,e,n){"use strict";n.r(e);var r=n("7a23"),i=Object(r["g"])(" Axios "),l=Object(r["g"])(" 2021年8月11日10:06:00 "),o={class:"xy"},s={class:"content"},a=Object(r["h"])("h2",null,"axios",-1),c=Object(r["f"])('<ul><li>axios是ajax的封装</li><li>基于promise的HTTP库</li><li>支持node端和浏览器</li><li>promise管理异步</li><li>支持请求/响应拦截器</li><li>支持请求取消</li></ul><hr><ul> 原生Ajax缺点 <li>MVC编程 ， 不符合现在的 MVVM</li><li>使用Ajax而引入整个 JQuery 不合理</li><li>不符合关注分离(Separation of Concerns)原则</li><li>配置和调用方式混乱， 基于事件的异步模型不友好</li></ul><hr><ul> RestFul API 规范 <li>GET(SELECT): 从服务器取出资源</li><li>POST(CREATE) 在服务器新建一个资源</li><li>PUT(UPDATE) 在服务器更新资源(客户端提供改变后的完整资源)</li><li>PATCH(UPDATE) 在服务器更新资源(客户端提供改变的属性)</li><li>DELETE(DELETE) 在服务器删除资源</li><hr></ul><hr><ul>常用语法 <li>axios(config) | 发送任意请求</li><li>axios(url[,config]) | 指定url发送 get 请求</li><li>axios.request(config) | 等同于 axios(config)</li><li>axios.get(url[,config]) | 发送 get 请求</li><li>axios.delete(url[,config]) | 发送 delete 请求</li><li>axios.post(url[,data , config]) | 发送 post 请求</li><li>axios.put(url[, data , config]) | 发送 put 请求</li><li>axios.defaults.xxx | 请求的默认全局配置</li><li>axios.interceptors.request.use() | 添加请求拦截器</li><li>axios.interceptors.response.use() | 添加响应拦截器</li><li>axios,create([config]) | 创建一个新的 axios (没有下面的功能)</li><li>axios.Cancel() | 创建取消请求的错误对象</li><li>axios.CancelToken() | 创建取消请求的 token 对象</li><li>axios.isCancel() | 是否是一个取消请求的错误</li><li>axios.all(promises) | 批量执行多个异步请求</li><li>axios.spread() | 指定接收所有成功数据的回调函数的方法</li></ul><ul>响应报文 <li>响应头 : headers</li><li>响应行</li><li>响应体</li><li>响应空行</li><li>request: 原生的ajax请求对象</li><li>status: 响应状态码</li><hr></ul><h4>配置对象(config)</h4><ul><li>url : 请求地址</li><li>method : 请求类型</li><li>baseURL : 请求地址的基础地址</li><li>transformRequest : 将请求数据进行处理，在进行发送</li><li>transformResponse : 对响应的结果进行改变</li><li>headers : 对请求头信息配置</li><li>params ：设定url参数 添加属性</li></ul><hr><pre><code class="language-js">function get (){ // 获取\r\n        // 发送Ajax请求\r\n            axios({\r\n            // 请求类型\r\n                method: &#39;GET&#39;, // GET POST PUT DELETE\r\n            // URL\r\n                url: &#39;http:// ...posts&#39;\r\n            }).then((result) =&gt; { // 成功信息\r\n                \r\n            }).catch((err) =&gt; { // 失败信息\r\n                    \r\n            });\r\n    }\r\n\r\n    function post (){ // 新建\r\n            axios({\r\n                method: &#39;POST&#39;, // GET POST PUT DELETE\r\n                url: &#39;http:// ...posts&#39;,\r\n                // 设置请求体\r\n                data: {\r\n                        title: &#39;请求数据&#39;,\r\n                        author: &#39;请求数据&#39;\r\n                }\r\n            }).then((result) =&gt; { // 成功信息\r\n                \r\n            }).catch((err) =&gt; { // 失败信息\r\n                    \r\n            });\r\n    }\r\n\r\n    function put (){ // 更新\r\n        axios({\r\n            method: &#39;PUT&#39;, // GET POST PUT DELETE\r\n            url: &#39;http:// ...posts/id&#39;,\r\n            data: {\r\n                    title: &#39;请求数据&#39;,\r\n                    author: &#39;请求数据&#39;\r\n            }\r\n        }).then((result) =&gt; { // 成功信息\r\n            \r\n        }).catch((err) =&gt; { // 失败信息\r\n                \r\n        });\r\n    }   \r\n        \r\n    function Delete (){ // 删除\r\n            axios({\r\n            method: &#39;DELETE&#39;, // GET POST PUT DELETE\r\n            url: &#39;http:// ...posts/id&#39;,\r\n            }).then((result) =&gt; { // 成功信息\r\n            \r\n            }).catch((err) =&gt; { // 失败信息\r\n                    \r\n            });\r\n        }</code></pre><hr><h2>实例</h2><h4>POST ， 将JSON转化为字符串格式</h4><ul><li>transformRequest` 允许在向服务器发送前，修改请求数据,对 data 进行任意转换处理</li><li>`headers` 是即将被发送的自定义请求头</li><li>encodeURIComponent(str); 进行 URL 编码</li><li>对应的解码为 decodeURIComponent()</li></ul><pre><code class="language-js">fun(){\r\n    axios.post(&#39;url: ...&#39; , this.value , {\r\n        transformRequest: [ \r\n            function(data){\r\n                let str = &#39;&#39;,\r\n                for(let key in data){\r\n                    str += encodeURIComponent(key)\r\n                        + &#39;=&#39;\r\n                        + encodeURIComponent(data[key])\r\n                        + &#39;&amp;&#39;\r\n                }\r\n                return str\r\n            }\r\n        ],\r\n        headers: {\r\n            // 传入头信息\r\n        },\r\n\r\n    }).then((result) =&gt; {\r\n        \r\n    }).catch((err) =&gt; {\r\n        \r\n    });\r\n}</code></pre><hr><h4>封装网络请求</h4><ol><li>创建一个统一的接口目录</li><li>新建一个 request.js 文件</li><ul><li>baseURL: 设置基础 URL</li><li>timeout: 设置 请求超时上限，超时将中断请求</li><li>headers: 自定义请求头</li></ul><pre><code class="language-js">import axios from &#39;axios&#39;\r\n\r\n// 创建 axios 实例 \r\nconst instance = axios.create({\r\n    baseURL: &#39;http:// ...&#39;,\r\n    timeout: 1000 , \r\n    headers: {&#39;&#39;:&#39;&#39;}\r\n})\r\n\r\n// 封装方法 \r\nexport function get(url , params) {  // 封装 get 方法 \r\n    return axios.get(url , {  // return axios 返回的是promise 值，可以 get.then()\r\n    //     instance.get(... // 使用实例\r\n        params\r\n    })\r\n}</code></pre></ol>',20);function u(t,e,n,u,d,p){var h=Object(r["y"])("nav-bar"),x=Object(r["y"])("sidebarR");return Object(r["q"])(),Object(r["d"])("div",null,[Object(r["h"])(h,null,{default:Object(r["E"])((function(){return[i]})),time:Object(r["E"])((function(){return[l]})),_:1}),Object(r["h"])("div",o,[Object(r["h"])("div",s,[a,Object(r["h"])(x),c])])])}var d=n("d968"),p=n("e360"),h=(n("c197"),n("bc3a"),n("1906")),x={components:{navBar:d["a"],btn:p["a"],sidebarR:h["a"]},methods:{ax:function(){}}};x.render=u;e["default"]=x},bf30:function(t,e,n){"use strict";n("c545")},c545:function(t,e,n){},d175:function(t,e,n){},e360:function(t,e,n){"use strict";var r=n("7a23"),i=Object(r["G"])("data-v-691173d8");Object(r["t"])("data-v-691173d8");var l=Object(r["g"])("Go");Object(r["r"])();var o=i((function(t,e,n,i,o,s){return Object(r["q"])(),Object(r["d"])("div",{id:"getId",class:"button click",onClick:e[1]||(e[1]=function(){return s.getId&&s.getId.apply(s,arguments)})},[Object(r["h"])("strong",null,[Object(r["x"])(t.$slots,"default",{},(function(){return[l]}),{},!0)])])})),s={props:{type:String},methods:{getId:function(){this.type||(document.getElementById("getId").style="box-shadow: rgba(214, 30, 30, 0.900) 0px 5px 15px;",setTimeout((function(){document.getElementById("getId").style="box-shadow: rgba(214, 30, 30, 0.300) 0px 5px 15px;",setTimeout((function(){document.getElementById("getId").style="box-shadow: rgba(214, 30, 30, 0.900) 0px 5px 15px;",setTimeout((function(){document.getElementById("getId").style="box-shadow: rgba(214, 30, 30, 0.767) -5px 5px 5px;"}),500)}),1e3)}),500))}}};n("bf30");s.render=o,s.__scopeId="data-v-691173d8";e["a"]=s}}]);
//# sourceMappingURL=chunk-130c2c93.7940a29b.js.map