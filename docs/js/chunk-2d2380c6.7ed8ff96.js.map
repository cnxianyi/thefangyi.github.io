{"version":3,"sources":["webpack:///./src/study/git/basis.vue","webpack:///./src/study/git/basis.vue?67b1"],"names":["class","default","time","data","components","navBar","sidebarR","methods","GoSection","str","document","getElementById","scrollIntoView","behavior","__exports__","render"],"mappings":"kOAGqC,e,iBAGH,wB,GAKzBA,MAAM,M,GACFA,MAAM,W,EACP,eAAsB,UAAlB,iBAAa,G,8qFAZzB,eAuFM,YAtFF,eAOU,QANWC,QAAO,GAAC,iBAEzB,C,MACiBC,KAAI,GAAC,iBAEtB,C,YAGR,eA2EM,MA3EN,EA2EM,CA1EF,eAyEM,MAzEN,EAyEM,CAxEF,EACA,eAAqB,GAErB,W,wBA8EG,GACXC,KADW,WAEP,MAAO,IAIXC,WAAY,CACRC,SAAA,KACAC,SAAA,QAEJC,QAAS,CACLC,UADK,SACKC,GACNC,SAASC,eAAT,UAA2BF,IAAOG,eAAe,CAACC,SAAU,c,qBCrGxE,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E","file":"js/chunk-2d2380c6.7ed8ff96.js","sourcesContent":["<template>\r\n    <div>\r\n        <nav-bar>\r\n            <template v-slot:default>\r\n                Git Basis\r\n            </template>\r\n            <template v-slot:time>\r\n                2021年8月26日10:05:46\r\n            </template>\r\n        </nav-bar>\r\n\r\n    <div class=\"xy\">\r\n        <div class=\"content\">\r\n            <h2>Git 分布式版本控制工具</h2>\r\n            <sidebarR></sidebarR>\r\n\r\n            <h4>git 常用命令</h4>\r\n            <ul>鼠标右键\r\n                <li>Git GUI Here : GIt提供的图形界面工具</li>\r\n                <li>Git Bash Here : 命令行工具</li>\r\n            </ul>\r\n    <hr>\r\n            <ul>基本配置(命令行 Git Bash)\r\n                <li>git config --global user.name\"{username}\" : 设置用户名</li>\r\n                <li>git config --global user.email\"{email@...}\" : 设置邮箱</li>\r\n                <li>git config --global user.name ：查看</li>\r\n                <li>git config --global user.email</li>\r\n            </ul>\r\n    <hr>\r\n            <ol>获取本地仓库\r\n                <small>使用git 对代码进行版本控制，首先需要获得本地仓库</small>\r\n                <li>进入目录</li>\r\n                <li>右键 Git Bash</li>\r\n                <li>$ git init</li>\r\n                <li>创建成功会显示 .git 的隐藏目录</li>\r\n                <li>.gitignore : 设置忽略 git 列表</li>\r\n            </ol>\r\n    <hr>\r\n            <ul> 基础操作\r\n                <li>新创建或修改的文件 ， 使用 git add{文件名 / 通配符.} 添加到暂存区</li>\r\n                <li>暂存区的文件 通过 git commit -m'注释' 提交到仓库</li>\r\n                <li>git status 来查看当前 git 仓库的状态</li>\r\n                <li>git reflog : 查看 git 操作记录</li>\r\n                <li>git log[options] 查看 git 提交日志</li>\r\n                <ul> options\r\n                    <li>--all : 显示所有分支</li>\r\n                    <li>--pretty=oneline : 将提交信息输出为一行</li>\r\n                    <li>--abbrev-commit : 使得输出的 commitId 更简短</li>\r\n                    <li>--graph : 图形显示</li>\r\n                </ul>\r\n                <li>版本回退 git reset --hard commitId</li>\r\n\r\n            </ul>\r\n    <hr>\r\n            <h4>分支</h4>\r\n\r\n            <ul>\r\n                <li>git branch : 查看所有分支</li>\r\n                <li>git branch {name} : 创建新分支</li>\r\n                <li>git checkout {name} : 切换分支</li>\r\n                <li>Git checkout -b {name} : 创建且切换到 分支</li>\r\n                <li>git merge {name} : 将 {name} 分支合并到当前分支</li>\r\n            </ul>\r\n            \r\n            <hr>\r\n\r\n            <h4>Git Commit 注释规范</h4>\r\n            <pre>&#60;type&#62;(&#60;scope&#62;) : &#60;subject&#62;\r\n// 空行\r\n&#60;body&#62;</pre>\r\n            <ul> type (必须) : 说明 commit 的类别\r\n                <li>br : 特别针对 Bug 号</li>\r\n                <li>feat : 新功能 (feature)</li>\r\n                <li>fix : 修补 Bug </li>\r\n                <li>docs : 文档</li>\r\n                <li>style : 格式(不修改代码的变动)</li>\r\n                <li>refactor : 重构</li>\r\n                <li>test : 增加测试</li>\r\n                <li>chore : 构建过程中辅助工具的变动</li>\r\n                <li>revert:feat(pencil):add 'graphiteWidth' option (撤销之前的 commit)</li>\r\n            </ul>\r\n            <br>\r\n            <ul>scope : 说明 commit 影响的范围(数据层，控制层，视图层...)</ul>\r\n            <ul>subject: 简短描述 - 动词开头，第一人称现在时，第一个字母小写，结尾不加句号</ul>\r\n            <ul>body : 详细描述 </ul>\r\n        </div>\r\n    </div>\r\n     \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport navBar from 'common/navBar.vue'\r\nimport sidebarR from 'common/SidebarR.vue'\r\nexport default {\r\n    data() {\r\n        return {\r\n            \r\n        }\r\n    },\r\n    components: {\r\n        navBar,\r\n        sidebarR\r\n    },\r\n    methods: {\r\n        GoSection(str){\r\n            document.getElementById(`${str}`).scrollIntoView({behavior: 'smooth'});\r\n        },\r\n\r\n    },\r\n\r\n    \r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    \r\n</style>","import { render } from \"./basis.vue?vue&type=template&id=69cf2032&scoped=true\"\nimport script from \"./basis.vue?vue&type=script&lang=js\"\nexport * from \"./basis.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\thefa\\\\Documents\\\\GitHub\\\\thefangyi.github.io\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69cf2032\"]])\n\nexport default __exports__"],"sourceRoot":""}